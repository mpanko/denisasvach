The following text represents a project with code. The structure of the text consists of sections beginning with ----, followed by a single line containing the file path and file name, and then a variable number of lines containing the file contents. The text representing the project ends when the symbols --END-- are encountered. Any further text beyond --END-- is meant to be interpreted as instructions using the aforementioned project as context.
----
tsconfig.json
{
  "baseUrl": ".",
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

----
tailwind.config.ts
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
};
export default config;

----
postcss.config.mjs
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

----
package.json
{
  "name": "denisasvach",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "lucide-react": "^0.452.0",
    "next": "14.2.15",
    "react": "^18",
    "react-dom": "^18"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.15",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

----
next.config.mjs
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

----
next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {
    reactStrictMode: true,
    images: {
      domains: ['placeholder.com'],
    },
    webpack(config) {
      config.module.rules.push({
        test: /\.svg$/,
        use: ['@svgr/webpack'],
      });
      return config;
    },
  };
  
  module.exports = nextConfig;
----
.exclusionListConfig
README.md
app\fonts\GeistVF.woff
app\fonts\GeistMonoVF.woff
----
.eslintrc.json
{
  "extends": ["next/core-web-vitals", "next/typescript"]
}

----
app\page.tsx
import ProjectGrid from './components/ProjectGrid'

export default function Home() {
  return (
    <div className="container mx-auto px-4 py-12">
      <h1 className="sr-only">Denisa Svach Portfolio</h1>
      <ProjectGrid />
    </div>
  )
}
----
app\layout.tsx
import './globals.css'
import { Inter } from 'next/font/google'
import Layout from './components/Layout'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Denisa Svach Portfolio',
  description: 'Portfolio of visual artist Denisa Svach',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Layout>{children}</Layout>
      </body>
    </html>
  )
}
----
app\globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@font-face {
  font-family: 'Akkurat';
  src: url('/fonts/Akkurat-Light.woff2') format('woff2'),
       url('/fonts/Akkurat-Light.woff') format('woff');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Akkurat';
  src: url('/fonts/Akkurat-Regular.woff2') format('woff2'),
       url('/fonts/Akkurat-Regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
----
app\data\projects.ts
export const projects = [
    { 
      id: 1, 
      title: 'Spirit Level', 
      image: '/placeholder.svg?height=900&width=1600', 
      description: 'An exploration of balance and equilibrium in both physical and metaphysical realms.',
      content: [
        { type: 'text', content: 'Spirit Level is a series that delves into the concept of balance, both in the physical world and in our inner lives. Through a variety of media, this project examines how we strive for and maintain equilibrium in an ever-changing environment.', span: false },
        { type: 'image', src: '/placeholder.svg?height=600&width=800', alt: 'Spirit Level installation view', span: true },
        { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Spirit Level artwork detail', span: false },
        { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Spirit Level conceptual piece', span: false },
        { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Spirit Level exhibition overview', span: false },
      ]
    },
    // Add more projects here
  ];
----
app\data\bioData.ts
export const bioSummary = `
Denisa Svach is a contemporary visual artist known for her innovative approach to conceptual and installation art. 
Born in Prague, she developed a passion for art at a young age and went on to study at the Academy of Fine Arts in Prague.

Her work explores themes of perception, space, and the interplay between physical and abstract realities. 
Denisa's art challenges viewers to reconsider their understanding of form, function, and the boundaries of artistic expression. 
Her installations, performances, and conceptual pieces have been exhibited in galleries and museums across Europe and Asia, 
receiving critical acclaim for their thought-provoking nature and meticulous execution.

When not in her studio, Denisa can be found exploring architectural spaces, studying philosophy, 
or engaging in interdisciplinary collaborations with dancers, musicians, and technologists, 
all of which continually inform and inspire her artistic practice.
`;

export const bioSections = {
  residencies: [
    {
      year: 2022,
      title: "Rathaus fÃ¼r Kultur: Analog + Virtual Bodies",
      type: "Dance Workshop",
      location: "Lichtensteig, Switzerland"
    },
    {
      year: 2021,
      title: "Egon Schiele Art Centre",
      type: "Artist Residency",
      location: "Cesky Krumlov, Czech Republic"
    },
    // Add more residencies here
  ],
  scenography: [
    {
      year: 2024,
      title: "Who Doesn't Know Lubochka",
      type: "Scenography",
      description: "Performance by Olesya Sydorenko"
    },
    {
      year: 2024,
      title: "Dutina",
      type: "Costume",
      description: "Video installation by Richard Blasko"
    },
    // Add more scenography projects here
  ],
  // Add other sections (soloAndDuos, groupExhibitions, performances) here
};
----
app\components\ProjectGrid.tsx
import React from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { projects } from '../data/projects';

const ProjectGrid: React.FC = () => (
  <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
    {projects.map((project) => (
      <Link key={project.id} href={`/project/${project.id}`}>
        <div className="group cursor-pointer">
          <div className="relative aspect-[16/9] overflow-hidden">
            <Image
              src={project.image}
              alt={project.title}
              layout="fill"
              objectFit="cover"
              className="transition-transform duration-500 group-hover:scale-110"
            />
            <div className="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex items-center justify-center">
              <h2 className="text-white text-2xl font-light tracking-wider">{project.title}</h2>
            </div>
          </div>
        </div>
      </Link>
    ))}
  </div>
);

export default ProjectGrid;
----
app\components\ProjectDetail.tsx
import React from 'react';
import Image from 'next/image';
import { projects } from '../data/projects';

type ProjectDetailProps = {
  projectId: number;
};

const ProjectDetail: React.FC<ProjectDetailProps> = ({ projectId }) => {
  const project = projects.find(p => p.id === projectId);

  if (!project) return <div>Project not found</div>;

  return (
    <div className="max-w-5xl mx-auto">
      <h1 className="text-4xl font-light mb-8 tracking-wide">{project.title}</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {project.content.map((item, index) => (
          <div key={index} className={item.span ? "col-span-full" : ""}>
            {item.type === 'text' && (
              <p className="text-lg leading-relaxed text-gray-700">{item.content}</p>
            )}
            {item.type === 'image' && (
              <div className="relative aspect-[4/3]">
                <Image
                  src={item.src}
                  alt={item.alt}
                  layout="fill"
                  objectFit="cover"
                  className="rounded-sm"
                />
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};

export default ProjectDetail;
----
app\components\Layout.tsx
import React from 'react';
import Header from './Header';
import Footer from './Footer';

type LayoutProps = {
  children: React.ReactNode;
};

const Layout: React.FC<LayoutProps> = ({ children }) => (
  <div className="min-h-screen flex flex-col font-akkurat bg-gray-50">
    <Header />
    <main className="flex-grow container mx-auto px-4 py-12">
      {children}
    </main>
    <Footer />
  </div>
);

export default Layout;
----
app\components\Header.tsx
import React from 'react';
import Link from 'next/link';

const Header: React.FC = () => (
  <header className="sticky top-0 z-10 bg-white border-b border-gray-200">
    <div className="container mx-auto px-4 py-6 flex justify-between items-center">
      <Link href="/" className="text-2xl font-light tracking-wider">
        DENISA SVACH
      </Link>
      <nav>
        <ul className="flex space-x-8">
          <li>
            <Link href="/" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Portfolio
            </Link>
          </li>
          <li>
            <Link href="/bio" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Bio
            </Link>
          </li>
          <li>
            <Link href="/contact" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Contact
            </Link>
          </li>
        </ul>
      </nav>
    </div>
  </header>
);

export default Header;
----
app\components\Footer.tsx
import React from 'react';
import Link from 'next/link';

const Header: React.FC = () => (
  <header className="sticky top-0 z-10 bg-white border-b border-gray-200">
    <div className="container mx-auto px-4 py-6 flex justify-between items-center">
      <Link href="/" className="text-2xl font-light tracking-wider">
        DENISA SVACH
      </Link>
      <nav>
        <ul className="flex space-x-8">
          <li>
            <Link href="/" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Portfolio
            </Link>
          </li>
          <li>
            <Link href="/bio" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Bio
            </Link>
          </li>
          <li>
            <Link href="/contact" className="text-sm uppercase tracking-widest transition-all duration-300 hover:text-black">
              Contact
            </Link>
          </li>
        </ul>
      </nav>
    </div>
  </header>
);

export default Header;
----
app\components\CollapsibleSection.tsx
import React, { useState } from 'react';
import { ChevronDown } from 'lucide-react';

type CollapsibleSectionProps = {
  title: string;
  items: Array<{
    year: number;
    title: string;
    type?: string;
    description?: string;
    location?: string;
  }>;
};

const CollapsibleSection: React.FC<CollapsibleSectionProps> = ({ title, items }) => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div className="border-b border-gray-200 py-4">
      <button
        className="flex justify-between items-center w-full text-left font-semibold text-lg group"
        onClick={() => setIsOpen(!isOpen)}
        aria-expanded={isOpen}
      >
        <span className="relative overflow-hidden">
          {title}
          <span className="absolute bottom-0 left-0 w-full h-0.5 bg-black transform origin-left scale-x-0 transition-transform duration-300 ease-out group-hover:scale-x-100"></span>
        </span>
        <ChevronDown className={`w-5 h-5 transition-transform duration-300 ease-in-out ${isOpen ? 'rotate-180' : ''}`} />
      </button>
      <div
        className={`mt-4 overflow-hidden transition-all duration-300 ease-in-out ${
          isOpen ? 'max-h-[1000px] opacity-100' : 'max-h-0 opacity-0'
        }`}
      >
        <ul className="space-y-4">
          {items.map((item, index) => (
            <li key={index} className="pl-4 border-l-2 border-gray-200 transform transition-all duration-300 ease-in-out hover:translate-x-2">
              <h4 className="font-medium">{item.title}</h4>
              <p className="text-sm text-gray-600">
                {item.year}
                {item.type && ` | ${item.type}`}
                {item.description && ` | ${item.description}`}
                {item.location && ` | ${item.location}`}
              </p>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default CollapsibleSection;
----
app\components\Bio.tsx
import React from 'react';
import CollapsibleSection from './CollapsibleSection';
import { bioSummary, bioSections } from '../data/bioData';

const Bio: React.FC = () => (
  <div className="max-w-3xl mx-auto">
    <h1 className="text-4xl font-light mb-8 tracking-wide">About Denisa Svach</h1>
    {bioSummary.split('\n\n').map((paragraph, index) => (
      <p key={index} className="text-lg mb-6 leading-relaxed text-gray-700">
        {paragraph}
      </p>
    ))}
    
    <div className="mt-12 space-y-6">
      <CollapsibleSection title="Residencies" items={bioSections.residencies} />
      <CollapsibleSection title="Scenography" items={bioSections.scenography} />
      {/* Add other sections here */}
    </div>
  </div>
);

export default Bio;
--END--